%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: fcf7219bab7fe46a1ad266029b2fee19, type: 3}
  m_Name: Anchoring
  m_EditorClassIdentifier: 
  icon: {fileID: 2800000, guid: bfd3f357eb4a64d5faf8f3346200600e, type: 3}
  title: 'Making it resizable'
  sections:
  - heading: "Export AndroidManifest"
    text: The AndroidManifest file needs to be customized to include the large screen config changes.  Under ProjectSettings -> Player -> PublishingSettings select the Custom Main Manifest checkbox.
    
    Add the following android:configChanges="screenSize|orientation|keyboard|keyboardHidden"
    linkText: Android App Manifest
    url: https://docs.unity3d.com/Manual/android-manifest.html
  - heading: Fullscreen and Resizable
    text: 'Your application needs to be marked as resizable and these settings can be selected under ProjectSettings -> Player -> ResolutionAndPresentation by selecting the Fullscreen mode as Fullscreen Window and Resizable Window checked.'
    linkText: Documentation
    url: https://docs.unity3d.com/2022.2/Documentation/Manual/class-PlayerSettingsAndroid.html#Resolution
  - heading: Scene changes
    text: 'This scene has been modified to handle the full-screen resizable option, and also to be safe-frame aware.  The first RectTransform child of the Canvas has a new script added called SafeZoneUI that you can use to automatically resize based on device safe frame settings.
    
    There is also a ConfigurationManager GameObject and matching component that receives the Android event during configuration mode changes, including the fold activity for foldable devices.'
    linkText: Safe Frame Area
    url: https://docs.unity3d.com/ScriptReference/Screen-safeArea.html

loadedLayout: 1
